--------------------------------------------------------------------------
--Creating study table
--INDEX DATE: '2017-01-01'
--INCLUSION CRITERIA IN THIS TABLE:
1.	Appearance of at least one of the AF READ codes in patients primary care records.
2.	Time period will be January 2000 onwards (or relevant start date for data ommencing after 2000).
3.	The comorbidities will be extracted FROM relevant datasets
4.	ALL AGES
5.	ALL GENDERS
6.	IN THIS UPDATE ALL EVENTS WERE LIMITED TO THE INDEX DATE TO MAKE SURE ABOUT CONSISTANCY
7.	A 6 MONTHS follow back AND follow forward GP DATA WINDOW IS required FOR determining the occurrence OF events 
--------------------------------------------------------------------------
--A TABLE WITH ALL AF ALFS FROM 2000 TO 31-12-2017
--Update it is the same ALF lk table but the flags will be for HAS-BLED analysis and comparison

--this table includes all AF patients from 2000 onward
CREATE TABLE SAILW0866V.MSC_HASB_20190807 AS (
--INSERT INTO SAILW0866V.MSC_HASB_20190807
SELECT DISTINCT ALF_PE, MIN(EVENT_DT) FIRST_AF_DIAG_DT FROM "SAILW0866V"."GP_AF_20170905" 
WHERE 
	alf_sts_cd in ('1','4','39')
	AND 
	alf_Pe is not null
	AND
	gndr_cd is not null
	AND
	event_cd is not null
	AND 
	prac_cd_Pe is not null
	AND
	local_num_PE is not null
	AND 
	EVENT_DT <= '2018-01-01'
GROUP BY ALF_PE
)WITH NO DATA;

COMMIT;

-----------------------------------------------
--WOB / GNDR_CD / DEATH_DT
-----------------------------------------------
ALTER TABLE SAILW0866V.MSC_HASB_20190807  
ADD COLUMN WOB DATE
ADD COLUMN GNDR_CD INTEGER
ADD COLUMN DEATH_DT	DATE

MERGE INTO 
SAILW0866V.MSC_HASB_20190807    S
USING 
	(
	SELECT distinct * FROM 
--	SAIL0866V.ADDE_DEATHS_20180608
	SAIL0866V.WDSD_AR_PERS_20181101
--		WHERE 
--		DOD
--		DEATH_DT
--		<= '2018-01-01'
	) A
ON 
S.ALF_PE=A.ALF_PE
WHEN MATCHED THEN 
UPDATE 
	SET 
	S.WOB=A.WOB,
	S.GNDR_CD=A.GNDR_CD,
--	S.DEATH_DT=A.DOD
--	S.DEATH_DT=A.DEATH_DT

COMMIT;

---------------------------------------------------------
MERGE INTO 
SAILW0866V.MSC_HASB_20190807     S
USING 
	(
	SELECT ALF_PE, DEATH_DT, DEC_SEX_CD, DEC_LSOA_CD FROM "SAIL0866V"."ADDE_DEATHS_20180608"
		WHERE ALF_PE IN
		(
		SELECT DISTINCT ALF_PE FROM 
			SAILW0866V.MSC_HASB_20190807     
		WHERE GNDR_CD IS NULL
		)
	) A
ON 
S.ALF_PE=A.ALF_PE
WHEN MATCHED THEN 
UPDATE 
	SET 
	S.GNDR_CD=A.DEC_SEX_CD

--check:
SELECT COUNT(*) FROM 
SAILW0866V.MSC_HASB_20190807 
WHERE 
GNDR_CD IS NULL --0

--FILLING GNDR GAPS USING GP DATA:

MERGE INTO 
SAILW0866V.MSC_HASB_20190807      S
USING 
	(
	SELECT DISTINCT ALF_PE, GNDR_CD FROM SAIL0866V.WLGP_GP_EVENT_ALF_CLEANSED_20180820
		WHERE ALF_PE IN(
		SELECT DISTINCT ALF_PE FROM 
		SAILW0866V.MSC_HASB_20190807 
		WHERE GNDR_CD IS NULL
		)
	) A
ON 
S.ALF_PE=A.ALF_PE
WHEN MATCHED THEN 
UPDATE 
	SET 
	S.GNDR_CD=A.GNDR_CD

COMMIT

SELECT COUNT(*) FROM 
SAILW0866V.MSC_HASB_20190807    
WHERE 
GNDR_CD IS NULL --0

---HURRAY! GNDR GAP IS FILLED NO NULL GNDERS :) check before hurray for AF s
---------------------------------------------------------------------------
ALTER TABLE 
SAILW0866V.MSC_HASB_20190807
ADD COLUMN GP_END_DATE	 DATE
ADD COLUMN STUDY_GP_COVERAGE_DAYS INTEGER

UPDATE SAILW0866V.MSC_HASB_20190807
SET 
gp_end_date = NULL 

COMMIT

MERGE INTO 
SAILW0866V.MSC_HASB_20190807
AS A
USING 
(
	SELECT DISTINCT ALF_PE, MAX(END_DATE) END_DT FROM 
	SAIL0866V.WLGP_CLEAN_GP_REG_BY_PRAC_INCLNONSAIL_MEDIAN_20180820
	WHERE 
	GP_DATA_FLAG=1 
	GROUP BY ALF_PE
) 
AS B
ON 
A.ALF_PE=B.ALF_PE
WHEN MATCHED THEN UPDATE 
SET 
A.GP_END_DATE=B.END_DT




---------------------------------------------------
ALTER TABLE 
SAILW0866V.MSC_HASB_20190807
ADD COLUMN STUDY_START_DATE	 DATE
ADD COLUMN STUDY_END_DATE	 DATE


UPDATE  	
SAILW0866V.MSC_HASB_20190807
SET 
study_start_date='2017-01-01',
study_end_date='2018-01-01'


UPDATE  	
SAILW0866V.MSC_HASB_20190807
SET STUDY_GP_COVERAGE_DAYS= 
				CASE 
				WHEN GP_end_DATE >= study_start_date THEN 
						DAYS(GP_END_DATE)-DAYS(study_start_date)
				ELSE 0
				END						

--------------------------------------------
--DEFINING AGE AS CHASD AND HAS FLAGS
--------------------------------------------
--AGE 
ALTER TABLE 
SAILW0866V.MSC_HASB_20190807 
ADD COLUMN BASE_AGE INTEGER
ADD COLUMN DEATH_AGE INTEGER


COMMIT

SELECT * FROM SAILW0866V.MSC_HASB_20190807

UPDATE
SAILW0866V.MSC_HASB_20190807 
SET
	BASE_AGE = CAST( DAYS(STUDY_START_DATE)- DAYS(WOB)AS INTEGER ),
 	DEATH_AGE = CAST( DAYS(DEATH_DT)- DAYS(WOB)AS INTEGER )


UPDATE 
SAILW0866V.MSC_HASB_20190807 
SET 
	BASE_AGE = CAST( BASE_AGE/365.25 AS INTEGER),
	DEATH_AGE = CAST( DEATH_AGE/365.25 AS INTEGER)

UPDATE
SAILW0866V.MSC_HASB_20190807 
SET BASE_AGE = CASE 
			when (death_age is null) then BASE_AGE
			when DEATH_DT > '2018-01-01' then BASE_AGE
			ELSE DEATH_AGE
			end
COMMIT

------------------------------------------------------------
-- AGE_65_74 / AGE_OVER_75
------------------------------------------------------------
ALTER TABLE 
SAILW0866V.MSC_HASB_20190807
ADD COLUMN AGE_65_74 INTEGER
ADD COLUMN AGE_over_75 INTEGER
ADD COLUMN AGE_OVER_65 INTEGER

COMMIT

UPDATE
SAILW0866V.MSC_HASB_20190807
SET AGE_65_74 = CASE 
			when BASE_AGE BETWEEN 65 AND 74 THEN 1
			ELSE 0
			end 

UPDATE
SAILW0866V.MSC_HASB_20190807
SET AGE_OVER_75 = CASE 
			when BASE_AGE >=75 THEN 1
			ELSE 0
			end 

UPDATE
SAILW0866V.MSC_HASB_20190807
SET AGE_OVER_65 = CASE 
			when BASE_AGE >= 65 THEN 1
			ELSE 0
			end 

COMMIT
	
------------------------------------------------------------
-- SEX_FEMALE
------------------------------------------------------------
ALTER TABLE
SAILW0866V.MSC_HASB_20190807
ADD COLUMN SEX_FEMALE INTEGER

COMMIT

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET SEX_FEMALE = CASE 
			when GNDR_CD='2' THEN 1
			ELSE 0
			end 
			
COMMIT
				
---------------------------------------------------------
--CHADSVASC: FLAGS
------------------------------------------------
------------------------------------------
--STROKE_TIA_THROM : CHADS
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
ADD column STROKE_CHAD INTEGER 
ADD COLUMN STROKE_CHAD_1ST_ADMIS_DT DATE

Alter table 
SAILW0866V.MSC_HASB_20190807
ADD column STROKE_CHAD_BL INTEGER 
ADD COLUMN STROKE_CHAD_BL_1ST_ADMIS_DT DATE

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
STROKE_CHAD=0, STROKE_CHAD_1ST_ADMIS_DT=NULL,
STROKE_CHAD_BL=0, STROKE_CHAD_BL_1ST_ADMIS_DT=NULL

COMMIT;

Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
		SELECT DISTINCT A.ALF_PE, A.fIRST_AF_DIAG_DT, MIN(B.ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.HASB_ALF_LK_20190325 AS A
JOIN 
		SAILW0866V.PEDW_CHAD_HAS_20170906 AS B
ON A.ALF_PE=B.ALF_PE
		WHERE B.CHADVASC IN ('s','emolism in S')
		AND
		B.DIAG_CD_1234 NOT IN ('I608','I602','I604','I600','I607','I601','I606','I603','I605','I609')
		AND
--		B.ADMIS_DT  <= '2017-01-01'
		B.ADMIS_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.fIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE
WHEN MATCHED
THEN 
UPDATE
SET 
--	GP.STROKE_CHAD_BL=1,
--	GP.STROKE_CHAD_BL_1ST_ADMIS_DT=FLAG.MIN_ADMIS_DT

	GP.STROKE_CHAD=1,
	GP.STROKE_CHAD_1ST_ADMIS_DT=FLAG.MIN_ADMIS_DT

------------------------------------------
--DIABETES (PEDW)
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
ADD column DIAB_CHAD_P INTEGER 
ADD column DIAB_CHAD_1ST_ADMIS_DT_P DATE


Alter table 
SAILW0866V.MSC_HASB_20190807
ADD column DIAB_CHAD_P_BL INTEGER 
ADD column DIAB_CHAD_1ST_ADMIS_DT_P_BL DATE



UPDATE 
SAILW0866V.MSC_HASB_20190807
SET  
DIAB_CHAD_1ST_ADMIS_DT_P=NULL ,DIAB_CHAD_P=0,
DIAB_CHAD_1ST_ADMIS_DT_P_BL=NULL ,DIAB_CHAD_P_BL=0



Merge into 
SAILW0866V.MSC_HASB_20190807
 as GP
USING
	(	
		SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.HASB_ALF_LK_20190325 AS A
JOIN 
		SAILW0866V.PEDW_CHAD_HAS_20170906 AS B
ON A.ALF_PE=B.ALF_PE
		WHERE B.CHADVASC IN ('d')
		AND
--		B.ADMIS_DT  <= '2017-01-01'
		B.ADMIS_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
--	GP.DIAB_CHAD_P_BL=1,
--	GP.DIAB_CHAD_1ST_ADMIS_DT_P_BL=FLAG.MIN_ADMIS_DT

	GP.DIAB_CHAD_P=1,
	GP.DIAB_CHAD_1ST_ADMIS_DT_P=FLAG.MIN_ADMIS_DT

------------------------------------------
--DIABETES (GP)
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
ADD column DIAB_CHAD_GP INTEGER 
ADD column DIAB_CHAD_GP_1ST_DT DATE

ADD column DIAB_CHAD_GP_BL INTEGER 
ADD column DIAB_CHAD_GP_1ST_DT_BL DATE

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET  
DIAB_CHAD_GP_1ST_DT=NULL ,DIAB_CHAD_GP=0,
DIAB_CHAD_GP_1ST_DT_BL=NULL ,DIAB_CHAD_GP_BL=0

--IN GP

Merge into 
SAILW0866V.MSC_HASB_20190807
 AS GP
USING
	(	
		SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		"SAILW0866V"."GP_DIAB_20170905" AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
	--	B.EVENT_DT  < '2017-01-01'
		B.EVENT_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE
WHEN MATCHED
THEN 
UPDATE
SET 
--	GP.DIAB_CHAD_GP_BL =1,
--	GP.DIAB_CHAD_GP_1ST_DT_BL=FLAG.MIN_EV_DT

	GP.DIAB_CHAD_GP =1,
	GP.DIAB_CHAD_GP_1ST_DT=FLAG.MIN_EV_DT

COMMIT;

--CHECK:
SELECT * FROM 
SAILW0866V.MSC_HASB_20190807
WHERE DIAB_CHAD_GP=1

--I AM HERE FINISH ADDING BASELINE AND STUDY CONDITIONS AND THEN READY FOR MODELLING
-------------------------------------------------
--VASCULAR (PEDW)
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
add column VASCULAR_CHAD_P INTEGER 
add column VASCULAR_CHAD_1ST_ADMIS_DT_P DATE

add column VASCULAR_CHAD_P_BL INTEGER 
add column VASCULAR_CHAD_1ST_ADMIS_DT_P_BL DATE

COMMIT;

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
VASCULAR_CHAD_P=0, 
VASCULAR_CHAD_1ST_ADMIS_DT_P=NULL,
VASCULAR_CHAD_P_bl=0, 
VASCULAR_CHAD_1ST_ADMIS_DT_P_bl=NULL


Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
		SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		SAILW0866V.PEDW_CHAD_HAS_20170906 AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.CHADVASC IN ('v')
		AND
--		B.ADMIS_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		B.ADMIS_DT  < '2017-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
	GP.VASCULAR_CHAD_P_BL=1,
	GP.VASCULAR_CHAD_1ST_ADMIS_DT_P_BL=FLAG.MIN_ADMIS_DT

	GP.VASCULAR_CHAD_P=1,
	GP.VASCULAR_CHAD_1ST_ADMIS_DT_P=FLAG.MIN_ADMIS_DT

COMMIT;

------------------------------------------
--VASCULAR (GP)
------------------------------------------
SELECT * FROM SAILW0866V.MSC_HASB_20190807


Alter table 
SAILW0866V.MSC_HASB_20190807
add column VASCULAR_CHAD_GP INTEGER 
ADD COLUMN VASC_CHAD_GP_1ST_DT DATE 

add column VASCULAR_CHAD_GP_BL INTEGER 
ADD COLUMN VASC_CHAD_GP_1ST_DT_BL DATE 


UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
VASCULAR_CHAD_GP=0, VASC_CHAD_GP_1ST_DT=NULL,
VASCULAR_CHAD_GP_BL=0, VASC_CHAD_GP_1ST_DT_BL=NULL

Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		"SAILW0866V"."GP_CHAD_20170905" AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.CHADSVASC IN ('v')
		AND
--		B.EVENT_DT BETWEEN '2017-01-01' AND '2018-01-01'
		B.EVENT_DT  < '2017-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
		) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
	GP.VASCULAR_CHAD_GP_BL =1,
	GP.VASC_CHAD_GP_1ST_DT_BL=FLAG.MIN_EV_DT

	GP.VASCULAR_CHAD_GP =1,
	GP.VASC_CHAD_GP_1ST_DT=FLAG.MIN_EV_DT

	
COMMIT;

------------------------------------------
--CHF (PEDW)
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807

add column CHF_CHAD_P INTEGER 
add column CHF_CHAD_1ST_ADMIS_DT_P DATE

add column CHF_CHAD_P_BL INTEGER 
add column CHF_CHAD_1ST_ADMIS_DT_P_BL DATE

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
CHF_CHAD_P=0, CHF_CHAD_1ST_ADMIS_DT_p=NULL,
CHF_CHAD_P_BL=0, CHF_CHAD_1ST_ADMIS_DT_p_BL=NULL


--IN PEDW
Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
	JOIN 
		SAILW0866V.PEDW_CHAD_HAS_20170906 AS B
	ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.CHADVASC IN ('HF')
		AND
	--	B.ADMIS_DT  < '2017-01-01'
		B.ADMIS_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
--	GP.CHF_CHAD_P_BL=1,
--	GP.CHF_CHAD_1ST_ADMIS_DT_P_BL=FLAG.MIN_ADMIS_DT
	
	GP.CHF_CHAD_P=1,
	GP.CHF_CHAD_1ST_ADMIS_DT_P=FLAG.MIN_ADMIS_DT
	
COMMIT;

------------------------------------------
--CHF (GP)
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
add column CHF_CHAD_GP INTEGER 
ADD COLUMN CHF_CHAD_1ST_EV_GP DATE

add column CHF_CHAD_GP_P INTEGER 
ADD COLUMN CHF_CHAD_1ST_EV_GP_P DATE


UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
CHF_CHAD_GP=0,CHF_CHAD_1ST_EV_GP=NULL,
CHF_CHAD_GP_P=0,CHF_CHAD_1ST_EV_GP_P=NULL

COMMIT;

--IN GP

Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		"SAILW0866V"."GP_CHAD_20170905" AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.CHADSVASC IN ('Heart failure')
		AND
--		B.EVENT_DT  < '2017-01-01'
		B.EVENT_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
--	GP.CHF_CHAD_GP_P =1,
--	GP.CHF_CHAD_1ST_EV_GP_P=FLAG.MIN_EV_DT

	GP.CHF_CHAD_GP =1,
	GP.CHF_CHAD_1ST_EV_GP=FLAG.MIN_EV_DT

COMMIT;

------------------------------------------
--RENAL DISEASE : 
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
add column RENAL_HAS_GP INTEGER 
add column RENAL_HAS_GP_DT DATE 

add column RENAL_HAS_GP_BL INTEGER 
add column RENAL_HAS_GP_DT_BL DATE 

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
RENAL_HAS_GP=0, RENAL_HAS_GP_DT=NULL,
RENAL_HAS_GP_BL=0, RENAL_HAS_GP_DT_BL=NULL

Merge into 
SAILW0866V.MSC_HASB_20190807
  as GP
using
	(	
SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		"SAILW0866V"."GP_RENAL_LIVER_20170905" AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.HASBLED IN ('Impaired renal failure')
		AND
		b.EVENT_DT  < '2017-01-01'
--		b.EVENT_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
	GP.RENAL_HAS_GP_BL=1,
	GP.RENAL_HAS_GP_DT_BL =FLAG.MIN_EV_DT

	GP.RENAL_HAS_GP=1,
	GP.RENAL_HAS_GP_DT =FLAG.MIN_EV_DT

COMMIT;

------------------------------------------
--LIVER DISEASE 
------------------------------------------
SELECT DISTINCT HAS_BLED FROM SAILW0594V.PEDW_CHAD_HAS_20170906 ---impaired liver function

SELECT DISTINCT HASBLED FROM "SAILW0594V"."GP_RENAL_LIVER_20170905" --impaired liver function

Alter TABLE
SAILW0866V.MSC_HASB_20190807
add column LIVER_HAS_GP INTEGER 
add column LIVER_HAS_GP_DATE DATE

add column LIVER_HAS_GP_BL INTEGER 
add column LIVER_HAS_GP_DATE_BL DATE


Alter TABLE
SAILW0866V.MSC_HASB_20190807
add column LIVER_HAS_P INTEGER
add column LIVER_HAS_P_1ST_ADMIS_DT DATE

add column LIVER_HAS_P_BL INTEGER
add column LIVER_HAS_P_1ST_ADMIS_DT_BL DATE


UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
LIVER_HAS_GP=0, LIVER_HAS_P=0, 
LIVER_HAS_P_1ST_ADMIS_DT=NULL, liver_has_gp_date=NULL,

LIVER_HAS_GP_BL=0, LIVER_HAS_P_BL=0, 
LIVER_HAS_P_1ST_ADMIS_DT_BL=NULL, liver_has_gp_date_BL=NULL

--FIRST MEGRING PEDW LIVERS:

Merge into 
SAILW0866V.MSC_HASB_20190807
  as GP
using
	(	
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		SAILW0866V.PEDW_CHAD_HAS_20170906 AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.HAS_BLED IN ('impaired liver function')
		AND
--		B.ADMIS_DT  < '2017-01-01'
		B.ADMIS_DT  BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN UPDATE
SET 
--	GP.LIVER_HAS_P_BL=1,
--	GP.LIVER_HAS_P_1ST_ADMIS_DT_BL=FLAG.MIN_ADMIS_DT 

	GP.LIVER_HAS_P=1,
	GP.LIVER_HAS_P_1ST_ADMIS_DT=FLAG.MIN_ADMIS_DT 

COMMIT;

--MERGE GP LIVERS:

Merge into 
SAILW0866V.MSC_HASB_20190807
  as GP
using
	(
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
		"SAILW0866V"."GP_RENAL_LIVER_20170905" AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.HASBLED IN ('impaired liver function')
		AND
--		B.EVENT_DT < '2017-01-01'
		B.EVENT_DT BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
		) FLAG
ON 
	GP.ALF_pE=FLAG.ALF_pE

WHEN MATCHED
THEN UPDATE
SET 
--	GP.LIVER_HAS_GP_BL=1 ,
--	GP.LIVER_HAS_GP_DATE_BL=FLAG.MIN_EV_DT 

	GP.LIVER_HAS_GP=1 ,
	GP.LIVER_HAS_GP_DATE=FLAG.MIN_EV_DT 

COMMIT;

------------------------------------------
--STROKE : HAS_BLED
------------------------------------------
--GOING TO USE THE SAME FLAG OF CHAD FOR THE SAILW0866V.HASB_ALF_LK_20190325
------------------------------------------
--BLEEDING
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
Add column MJ_BLEEDING_HASB_P INTEGER 
ADD COLUMN MJ_BLEEDING_HASB_1ST_ADMIS_DT_P DATE

Add column MJ_BLEEDING_HASB_P_BL INTEGER 
ADD COLUMN MJ_BLEEDING_HASB_1ST_ADMIS_DT_P_BL DATE


UPDATE 
SAILW0866V.MSC_HASB_20190807
SET MJ_BLEEDING_HASB_P=0, MJ_BLEEDING_HASB_1ST_ADMIS_DT_P=NULL,
MJ_BLEEDING_HASB_P_BL=0, MJ_BLEEDING_HASB_1ST_ADMIS_DT_P_BL=NULL

COMMIT;

--------------------------------------
SELECT * FROM SAILW0866V.CD_ICD10_20170814
WHERE 
	HAS_BLED IN ('bleeding','history of bleeding')
--USING TABLE OF MAJOR BLEEDING FROM SABRE REVIEWED LIST OF BLEEDING CODES:
SELECT * FROM SAILW0866V.PEDW_BLEED_20190714
------------------------------------------
	
Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
JOIN 
--decided to use the table with SABRE bleeding admissions:
		SAILW0866V.PEDW_BLEED_20190714 b
/*
		SAILW0866V.PEDW_CHAD_HAS_20170906 AS B
ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.HAS_BLED IN ('bleeding','history of bleeding')
		AND
		B.ADMIS_DT <= '2017-01-01'
*/
		ON A.ALF_PE=B.ALF_PE
WHERE
--		B.ADMIS_DT < '2017-01-01'
		B.ADMIS_DT BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_pE=FLAG.ALF_pE

WHEN MATCHED
THEN UPDATE SET 
	GP.MJ_BLEEDING_HASB_P=1,
	GP.MJ_BLEEDING_HASB_1ST_ADMIS_DT_P=FLAG.MIN_ADMIS_DT

	GP.MJ_BLEEDING_HASB_1ST_ADMIS_DT_P=FLAG.MIN_ADMIS_DT

	GP.MJ_BLEEDING_HASB_P_BL=1,
	GP.MJ_BLEEDING_HASB_1ST_ADMIS_DT_P_BL=FLAG.MIN_ADMIS_DT

COMMIT;

SELECT COUNT(DISTINCT ALF_PE) FROM SAILW0866V.MSC_HASB_20190807
WHERE MJ_BLEEDING_HASB_P =1

------------------------------------------
--HAS_BLED MEDICATION --LEFT THESE OUT SAILW0866V.WELSH_STROKE_20190308 (JULIAN SUGGESTION)
------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
Add column MEDICATION_HASB INTEGER
Add column MEDICATION_HASB_DT DATE

Add column MEDICATION_HASB_BL INTEGER
Add column MEDICATION_HASB_DT_BL DATE

UPDATE
SAILW0866V.MSC_HASB_20190807
SET MEDICATION_HASB=0, MEDICATION_HASB_BL=0

Merge into 
SAILW0866V.MSC_HASB_20190807
 as GP
using
	(	
	SELECT DISTINCT ALF_pE, MIN(EVENT_DT) MIN_EV_DT FROM "SAILW0866V"."GP_DRUG_HASBLED_20170905"
		WHERE
	EVENT_DT	< '2017-01-01'
	GROUP BY ALF_PE
	) FLAG
ON 
	GP.ALF_pE=FLAG.ALF_pE

WHEN MATCHED
THEN 
UPDATE
SET 
	GP.MEDICATION_HASB_BL=1,
	GP.MEDICATION_HASB_DT_BL=FLAG.MIN_EV_DT

	GP.MEDICATION_HASB=1,
	GP.MEDICATION_HASB_DT=FLAG.MIN_EV_DT
	
COMMIT;

------------------------------------------
--HYPERTENSION: 
------------------------------------------
--DECIDED THAT FOR THE FEASIBILITY PART OF THE STUDY:
--ONLY FLAG CASES WHO HAD A HYPERTENSION DIAGNOSIS IN THEIR GP RECORD


Alter table 
SAILW0866V.MSC_HASB_20190807
add column HYPT_GP_BL INTEGER
add column HYPT_GP_DT_BL DATE

add column HYPT_GP INTEGER
add column HYPT_GP_DT DATE

COMMIT;

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET HYPT_GP=0, HYPT_GP_BL=0

Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
	JOIN 
		"SAILW0866V"."GP_CHAD_20170905" AS B
	ON A.ALF_PE=B.ALF_PE
		WHERE 
		B.CHADSVASC='hypertension'
		AND
--		B.EVENT_DT < '2017-01-01'
		B.EVENT_DT BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_pE=FLAG.ALF_pE

WHEN MATCHED THEN UPDATE
SET 
--	GP.HYPT_GP_BL=1,
--	GP.HYPT_GP_DT_BL=FLAG.MIN_EV_DT

	GP.HYPT_GP=1,
	GP.HYPT_GP_DT=FLAG.MIN_EV_DT

COMMIT;

------------------------------------------
--LABILE INR
------------------------------------------
--WE WANT TO HAVE THREE SEPARATE FLAGS:
--	1-ANY INR
--	2-INR>5
--	3-INR>8

Alter table 
SAILW0866V.MSC_HASB_20190807

Add column INR_GP_BL INTEGER
Add column INR_GP_DT_BL DATE
Add column INR_5_OR_ABOVE_BL INTEGER
Add column INR_8_OR_ABOVE_BL INTEGER 

Add column INR_GP INTEGER
Add column INR_GP_DT DATE
Add column INR_5_OR_ABOVE INTEGER
Add column INR_8_OR_ABOVE INTEGER 

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET 
INR_GP=0,INR_5_OR_ABOVE=0,INR_8_OR_ABOVE=0,
INR_GP_BL=0,INR_5_OR_ABOVE_BL=0,INR_8_OR_ABOVE_BL=0


Merge into 
SAILW0866V.MSC_HASB_20190807
 as GP
using
	(	
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
	JOIN 
		"SAILW0866V"."GP_INR_20170905" AS B
	ON A.ALF_PE=B.ALF_PE
		WHERE 
--		B.EVENT_DT < '2017-01-01'
		B.EVENT_DT BETWEEN '2017-01-01' AND '2018-01-01'
		AND 
--		B.EVENT_VAL >= 5
		B.EVENT_VAL >= 8
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
		) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
--	GP.INR_GP_BL=1,
--	GP.INR_GP_DT_BL=FLAG.MIN_EV_DT
--	GP.INR_5_OR_ABOVE_BL=1
--	GP.INR_8_OR_ABOVE_BL=1


--	GP.INR_GP=1,
--	GP.INR_GP_DT=FLAG.MIN_EV_DT
--	GP.INR_5_OR_ABOVE=1
	GP.INR_8_OR_ABOVE=1
	
COMMIT;
--------------------------------------------------------
--ALCOHORL FLAG FOR HASBLED
--------------------------------------------------------
Alter table 
SAILW0866V.MSC_HASB_20190807
Add column ALCOHOL_BL INTEGER
Add column ALCOHOL_DT_BL DATE

Add column ALCOHOL INTEGER
Add column ALCOHOL_DT DATE


UPDATE 
SAILW0866V.MSC_HASB_20190807
SET ALCOHOL=0, ALCOHOL_BL=0

-------------------
Merge into 
SAILW0866V.MSC_HASB_20190807
as GP
using
	(	
	SELECT DISTINCT A.ALF_PE, A.FIRST_AF_DIAG_DT, MIN(B.EVENT_DT) MIN_EV_DT FROM 
		SAILW0866V.MSC_HASB_20190807 AS A
	JOIN 
		SAILW0866V.GP_ALOCHOL_20190310 AS B
	ON A.ALF_PE=B.ALF_PE
		WHERE 
--		B.EVENT_DT < '2017-01-01'
		B.EVENT_DT BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY A.ALF_PE, A.FIRST_AF_DIAG_DT
	) FLAG
ON 
	GP.ALF_PE=FLAG.ALF_PE

WHEN MATCHED
THEN 
UPDATE
SET 
GP.ALCOHOL=1,
GP.ALCOHOL_DT=FLAG.MIN_EV_DT

GP.ALCOHOL_BL=1,
GP.ALCOHOL_DT_BL=FLAG.MIN_EV_DT

SELECT * FROM SAILW0866V.MSC_HASB_20190807

---------------------------------------------------------
--SOME FIELDS NEED TO BE COMBINED PRIOR TO CALCULATIONS: 
--THOSE FLAGS WHICH WERE DRIVED SEPARATELY FOR GP AND PEDW
---------------------------------------------------------
--PEDW ONLY FLAGS:
	MI
	MJ-BLEEDING		: MJ_BLEEDING_HASB_P
	STROKE			: STROKE_CHAD / STROKE_HASB_P
--GP ONLY FLAGS:
	AF
	AC
	AP				: AP / AP_SINGLE / AP_P2Y12 / AP_DOUBLE
	HAS-BLED-MEDICATION : MEDICATION_HASB
	HYPERTENSION	: HYPT_GP
	RENAL			: RENAL_HAS_GP
	LABILE INR		: INR_GP / INR_5_OR_ABOVE / INR_8_OR_ABOVE
--PEDW & GP FLAGS:
	CHF				: CHF_CHAD_GP	   / CHF_CHAD_P
	VASCULAR		: VASCULAR_CHAD_GP / VASCULAR_CHAD_P
	DIABETES		: DIAB_CHAD_GP	   / DIAB_CHAD_P 
	LIVER			: LIVER_HAS_GP     / LIVER_HAS_P
--CREATE A COMBINED FLAG FOR PEDW & GP ONES: CHF, VASC, DIAB, LIVER
	
ALTER TABLE 
SAILW0866V.MSC_HASB_20190807
ADD COLUMN CHF_CHAD_COMB INTEGER
ADD COLUMN VASC_CHAD_COMB INTEGER
ADD COLUMN DIAB_CHAD_COMB INTEGER
ADD COLUMN LIV_HAS_COMB INTEGER

ADD COLUMN CHF_CHAD_COMB_BL INTEGER
ADD COLUMN VASC_CHAD_COMB_BL INTEGER
ADD COLUMN DIAB_CHAD_COMB_BL INTEGER
ADD COLUMN LIV_HAS_COMB_BL INTEGER

UPDATE
SAILW0866V.MSC_HASB_20190807
SET CHF_CHAD_COMB=0,VASC_CHAD_COMB=0,DIAB_CHAD_COMB=0,LIV_HAS_COMB=0,
CHF_CHAD_COMB_BL=0,VASC_CHAD_COMB_BL=0,DIAB_CHAD_COMB_BL=0,LIV_HAS_COMB_BL=0

COMMIT;

--CHF

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET CHF_CHAD_COMB= CASE 
			when CHF_CHAD_1st_admis_dt_p IS NOT NULL OR CHF_CHAD_1ST_EV_GP IS NOT NULL THEN 1
			ELSE 0 END
			
UPDATE  
SAILW0866V.MSC_HASB_20190807
SET CHF_CHAD_COMB_BL= CASE 
			when CHF_CHAD_1st_admis_dt_p_BL IS NOT NULL OR CHF_CHAD_1ST_EV_GP_P IS NOT NULL THEN 1
			ELSE 0 end

--VASC

UPDATE
SAILW0866V.MSC_HASB_20190807
SET VASC_CHAD_COMB= CASE 
			when VASCULAR_CHAD_1st_admis_dt_p IS NOT NULL OR VASC_CHAD_GP_1ST_DT IS NOT NULL THEN 1
			ELSE 0 end

UPDATE
SAILW0866V.MSC_HASB_20190807
SET VASC_CHAD_COMB_BL= CASE 
			when VASCULAR_CHAD_1st_admis_dt_p_BL IS NOT NULL OR VASC_CHAD_GP_1ST_DT_BL IS NOT NULL THEN 1
			ELSE 0 end

--DIAB

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET DIAB_CHAD_COMB= CASE 
			when DIAB_CHAD_1st_admis_dt_p IS NOT NULL OR DIAB_CHAD_GP_1ST_DT IS NOT NULL THEN 1
			ELSE 0 end

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET DIAB_CHAD_COMB_BL= CASE 
			when DIAB_CHAD_1st_admis_dt_p_BL IS NOT NULL OR DIAB_CHAD_GP_1ST_DT_BL IS NOT NULL THEN 1
			ELSE 0 end

--LIV
UPDATE 
SAILW0866V.MSC_HASB_20190807
SET LIV_HAS_COMB= CASE 
			when LIVER_HAS_P_1st_admis_dt IS NOT NULL OR LIVER_HAS_GP_DATE IS NOT NULL THEN 1
			ELSE 0 END
			
UPDATE 
SAILW0866V.MSC_HASB_20190807
SET LIV_HAS_COMB_BL= CASE 
			when LIVER_HAS_P_1st_admis_dt_BL IS NOT NULL OR LIVER_HAS_GP_DATE_BL IS NOT NULL THEN 1
			ELSE 0 end

COMMIT;

--CHECKS:
SELECT ALF_pE, LIV_HAS_COMB,LIVER_HAS_GP,LIVER_HAS_P FROM 
SAILW0866V.MSC_HASB_20190807
WHERE LIV_HAS_COMB=1 

---------------------------------------------------------
--HAS-BLEAD CALCULATION: 1-YEAR RISK OF MAJOR BLEEDING INCREASES FOR SCORE ABOVE 3
---------------------------------------------------------
--	HYPERTENSION	: HYPT_GP
--	RENAL			: RENAL_HAS_GP
--	LIVER			: LIV_HAS_COMB
--  STROKE			: STROKE_HASB_P
--  MJ_BLEEDING		: MJ_BLEEDING_HASB_P
--  LABILE INR		: INR_GP / INR_5_OR_ABOVE / INR_8_OR_ABOVE
--  AGE>65			: AGE_OVER_65
--  MEDICATION		: MEDICATION_HASB (WE EXCLUDED THESE)
--  ALCOHOL 		: INCLUDED THESE IN MOST UPDATED COHORT

ALTER TABLE  
SAILW0866V.MSC_HASB_20190807
ADD COLUMN HASBLED_INR5_BL INTEGER
ADD COLUMN HASBLED_INR8_BL INTEGER

ADD COLUMN HASBLED_INR5 INTEGER
ADD COLUMN HASBLED_INR8 INTEGER

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET HASBLED_INR5=0,HASBLED_INR8=0, HASBLED_INR5_BL=0,HASBLED_INR8_BL=0

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET HASBLED_INR5=CAST(HYPT_GP+RENAL_HAS_GP+LIV_HAS_COMB+
			STROKE_CHAD+MJ_BLEEDING_HASB_P+ALCOHOL+
			INR_5_OR_ABOVE+AGE_OVER_65 AS INTEGER)

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET HASBLED_INR8=CAST(HYPT_GP+RENAL_HAS_GP+LIV_HAS_COMB+
			STROKE_CHAD+MJ_BLEEDING_HASB_P+ALCOHOL+
			INR_8_OR_ABOVE+AGE_OVER_65 AS INTEGER)

			
UPDATE 
SAILW0866V.MSC_HASB_20190807
SET HASBLED_INR5_BL=CAST(HYPT_GP_BL+RENAL_HAS_GP_BL+LIV_HAS_COMB_BL+
			STROKE_CHAD_BL+MJ_BLEEDING_HASB_P_BL+ALCOHOL_BL+
			INR_5_OR_ABOVE_BL+AGE_OVER_65 AS INTEGER)

UPDATE 
SAILW0866V.MSC_HASB_20190807
SET HASBLED_INR8=CAST(HYPT_GP_BL+RENAL_HAS_GP_BL+LIV_HAS_COMB_BL+
			STROKE_CHAD_BL+MJ_BLEEDING_HASB_P_BL+ALCOHOL_BL+
			INR_8_OR_ABOVE_BL+AGE_OVER_65 AS INTEGER)

COMMIT;

SELECT COUNT(*) FROM
SAILW0866V.MSC_HASB_20190807
WHERE HASBLED_INR5 >=3 --13,251

---------------------------------------------------------
--CHADS2VASC2 CALCULATION:
---------------------------------------------------------
ALTER TABLE  
SAILW0866V.MSC_HASB_20190807
ADD COLUMN CHADSVASC_BL INTEGER
ADD COLUMN CHADSVASC INTEGER


UPDATE 
SAILW0866V.MSC_HASB_20190807
SET CHADSVASC=0, CHADSVASC_BL=0

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET CHADSVASC=CAST(AGE_65_74 + (2*(AGE_OVER_75)) + SEX_FEMALE + CHF_CHAD_COMB 
				+HYPT_GP + (2*(STROKE_CHAD)) + VASC_CHAD_COMB + DIAB_CHAD_COMB  AS INTEGER)

UPDATE  
SAILW0866V.MSC_HASB_20190807
SET CHADSVASC_BL=CAST(AGE_65_74 + (2*(AGE_OVER_75)) + SEX_FEMALE + CHF_CHAD_COMB_BL 
				+HYPT_GP_BL + (2*(STROKE_CHAD)) + VASC_CHAD_COMB_BL + DIAB_CHAD_COMB_BL  AS INTEGER)

COMMIT;



SELECT DISTINCT CHADSVASC, COUNT(DISTINCT ALF_pE) FROM 
SAILW0866V.MSC_HASB_20190807
GROUP BY  CHADSVASC

SELECT MEDIAN(CHADSVASC) FROM SAILW0866V.MSC_HASB_20190807
-----------------------------------
--AC AT THE START:
-----------------------------------
ALTER TABLE SAILW0866V.HASB_ALF_LK_20190325 
ADD COLUMN AC_BASELINE_2017 INTEGER

UPDATE SAILW0866V.HASB_ALF_LK_20190325 SET AC_BASELINE_2017=0

MERGE INTO SAILW0866V.HASB_ALF_LK_20190325 A
USING 
(
SELECT DISTINCT ALF_PE FROM 
 SAILW0866V.GP_AC_AP_20170905
WHERE READ_TYPE='anticoag'
AND EVENT_DT BETWEEN '2016-10-30' AND '2017-01-15'
) B
ON 
A.ALF_PE=B.ALF_PE
WHEN MATCHED THEN UPDATE 
SET 
A.AC_BASELINE_2017=1

----------------------------------------
--INCIDENT OF MJ BLEEDING FROM 2017-01-01 TO 2018-01-01:
-----------------------------------
Alter table 
SAILW0866V.HASB_ALF_LK_20190325
Add column MJ_BLEEDING_1718_P INTEGER 
ADD COLUMN MJ_BLEEDING_1718_ADMIS_DT_P DATE


UPDATE 
SAILW0866V.HASB_ALF_LK_20190325
SET MJ_BLEEDING_1718_P=0, MJ_BLEEDING_1718_ADMIS_DT_P=NULL

COMMIT;

Merge into 
SAILW0866V.HASB_ALF_LK_20190325
as GP
using
	(
	SELECT DISTINCT ALF_PE,MIN(ADMIS_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.PEDW_BLEED_20190714
		WHERE 
		ADMIS_DT BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY ALF_PE
	) FLAG
ON 
	GP.ALF_pE=FLAG.ALF_pE

WHEN MATCHED
THEN 
UPDATE
SET 
	GP.MJ_BLEEDING_1718_P=1,
	GP.MJ_BLEEDING_1718_ADMIS_DT_P=FLAG.MIN_ADMIS_DT

COMMIT;

----MJ BLEED IN GP:
Alter table 
SAILW0866V.HASB_ALF_LK_20190325
Add column MJ_BLEEDING_1718_GP INTEGER 
ADD COLUMN MJ_BLEEDING_1718_EVENT_DT_GP DATE


UPDATE 
SAILW0866V.HASB_ALF_LK_20190325
SET MJ_BLEEDING_1718_GP=0, MJ_BLEEDING_1718_EVENT_DT_GP=NULL

COMMIT;

Merge into 
SAILW0866V.HASB_ALF_LK_20190325
as GP
using
	(
	SELECT DISTINCT ALF_PE,MIN(EVENT_DT) MIN_ADMIS_DT FROM 
		SAILW0866V.GP_BLEED_20190714		WHERE 
		EVENT_DT BETWEEN '2017-01-01' AND '2018-01-01'
		GROUP BY ALF_PE
	) FLAG
ON 
	GP.ALF_pE=FLAG.ALF_pE

WHEN MATCHED
THEN 
UPDATE
SET 
	GP.MJ_BLEEDING_1718_GP=1,
	GP.MJ_BLEEDING_1718_EVENT_DT_GP=FLAG.MIN_ADMIS_DT

COMMIT;
